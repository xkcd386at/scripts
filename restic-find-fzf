#!/bin/bash

# restic-find-fzf PATT [args]

# Assumes RESTIC_REPOSITORY and RESTIC_PASSWORD (or RESTIC_PASSWORD_COMMAND) are set

# Use 'restic find' + fzf to select and restore files 'patt' can be '.' or '/'
# to see ALL files in ALL snapshots apart from the standard filters, 'restic
# find' also has -O and -N; you can use them too, as well as other filters
# like '--tag'.

# As a special case, if STDOUT is not a terminal, it ignores any arguments and
# filters provided and produces a full "find" output using "/" as the pattern.
# You can save this in a local file and use it as STDIN at any time later.
# This lets you look for files in a restic repo that is not actually available
# (e.g., on a USB device not currently mounted), though in that case hitting
# enter ("restore") won't do anything useful.

# Files and directories are listed:
# - reverse sorted (by date of snapshot)
# - without duplicates (i.e., files that already showed up in a more recent
#   snapshot won't show up again)

# NOTE: To avoid complicating the code too much, only the first pattern is
# converted to '*patt*' for your convenience.  If you want more patterns you
# can add them by supplying them as '*patt2*' not just 'patt2'

patt="$1"
shift

# stdout is not a terminal; create a full "find" output
[[ -t 1 ]] || {
    restic find -i -l /
    exit
}

sn=''
out=$(
    (
        if [[ -t 0 ]]; then
            restic find -i -l "*$patt*" "$@"
        else
            cat
        fi
    ) |
    perl -pe 'next unless /^Found.*snapshot (\S+) from (\S+ \S+)/; $_ = "$2 $1\n"; print STDERR "$2 $1\r" ' |
    perl -00 -lne 'push @f, $_; END { @f = sort { $b cmp $a } @f; print for @f }' |
    perl -lne 'print unless $seen{$_}++' |
    perl -lne '
        next unless /\S/;
        if (/^(....-..-.. ..:..:..) (........)$/) {
            $x = "$1\t$2";
        } else {
            s/^\S+ +\d+ +\d+ +//;
            s/^(\d+) +(\S+ \S+) +/$1\t$2\t/;
            print "$x\t$_";
        }
    ' | fzf -m | cut -f2,5
)

[[ -n $out ]] || exit 0

echo "$out" | while read sn fn
do
    echo "restoring '$fn' from '$sn'..."
    x restic restore -t . -i "$fn" $sn
done
